---
export interface Props {
  image: string;
  alt: string;
  title: string;
  subtitle?: string;
  description?: string;
}
const { image, alt, title, subtitle, description } = Astro.props;

// Crear un ID único para el checkbox
const uniqueId = `expand-${title.replace(/\s+/g, '-').toLowerCase()}`;
---


<div class="gallery-item">
  <img src={image} alt={alt} class="gallery-image" />
  <div class="gallery-caption-overlay">
    {(subtitle || description) ? (
      <>
        <input type="checkbox" id={uniqueId} class="expand-checkbox" />
        <div class="gallery-title-row">
          <strong class="gallery-title">{title}</strong>
          <label for={uniqueId} class="expand-btn desktop-only" tabindex="0" aria-label="Mostrar más">
            <span class="expand-btn-icon">
              <span class="plus">+</span>
              <span class="minus">−</span>
            </span>
          </label>
          <button class="expand-btn mobile-only" tabindex="0" aria-label="Mostrar más" id={uniqueId + '-btn'}>
            <span class="expand-btn-icon">
              <span class="plus">+</span>
            </span>
          </button>
        </div>
        <div class="gallery-extra-text desktop-only">
          <div class="gallery-extra-inner">
            {subtitle && <div class="gallery-subtitle">{subtitle}</div>}
            {description && <div class="gallery-description" set:html={description}></div>}
          </div>
        </div>
      </>
    ) : (
      <div class="gallery-title-row">
        <strong class="gallery-title">{title}</strong>
      </div>
    )}
  </div>
</div>

<script>
  if (typeof window !== 'undefined') {
    window.addEventListener('DOMContentLoaded', () => {
      const btns = document.querySelectorAll('.expand-btn[id$="-btn"]');
      const modalBg = document.getElementById('trabajo-modal-bg');
      const modalContent = document.getElementById('trabajo-modal-content');
      const closeModal = document.getElementById('trabajo-close-modal');

      function openTrabajoModal(content: string) {
        if (modalBg && modalContent) {
          modalContent.innerHTML = content;
          // Reinicia animación
          modalContent.style.transform = 'scale(0.7)';
          modalContent.style.opacity = '0';
          // Forzar reflow para reiniciar transición
          void modalContent.offsetWidth;
          modalBg.classList.add('active');
          setTimeout(() => {
            modalContent.style.transform = '';
            modalContent.style.opacity = '';
          }, 10);
          // Enfocar el modal para accesibilidad
          setTimeout(() => modalBg.focus(), 100);
        }
      }

      function closeTrabajoModal() {
        if (modalBg && modalContent) {
          // Animar cierre
          modalContent.style.transform = 'scale(0.7)';
          modalContent.style.opacity = '0';
          setTimeout(() => {
            modalBg.classList.remove('active');
            modalContent.innerHTML = '';
            modalContent.style.transform = '';
            modalContent.style.opacity = '';
          }, 250); // Debe coincidir con la transición de opacity
        }
      }

      btns.forEach(btn => {
        btn.addEventListener('click', function (e) {
          if (window.matchMedia('(max-width: 600px)').matches) {
            e.preventDefault();
            const card = btn.closest('.gallery-caption-overlay');
            const subtitle = card?.querySelector('.gallery-subtitle')?.outerHTML || '';
            const description = card?.querySelector('.gallery-description')?.outerHTML || '';
            openTrabajoModal(`${subtitle}${description}`);
          }
        });
      });

      if (closeModal) {
        closeModal.addEventListener('click', closeTrabajoModal);
      }
      if (modalBg) {
        modalBg.addEventListener('click', (e) => {
          if (e.target === modalBg) {
            closeTrabajoModal();
          }
        });
      }
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && modalBg?.classList.contains('active')) {
          closeTrabajoModal();
        }
      });
    });
  }
</script>

<style>
  /* Oculta el extra-text en móvil, visible solo en desktop */

  .desktop-only {
    display: block;
  }
  .mobile-only {
    display: none;
  }
  @media (max-width: 600px) {
    .desktop-only {
      display: none !important;
    }
    .mobile-only {
      display: inline-flex;
    }
  }


</style>

<style>
  .gallery-item {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
  }

  @media (max-width: 600px) {
    .gallery-item {
      width: 100vw !important;
      max-width: 100vw !important;
      border-radius: 0 !important;
      margin: 0 !important;
      box-sizing: border-box;
      overflow-x: hidden !important;
    }
    .gallery-caption-overlay {
      width: 100vw !important;
      max-width: 100vw !important;
      left: 0;
      padding-left: 0.5em;
      padding-right: 0.5em;
      box-sizing: border-box;
      overflow-x: hidden !important;
    }
    .gallery-image {
      width: 100vw !important;
      max-width: 100vw !important;
      display: block;
      overflow-x: hidden !important;
    }
  }
  .gallery-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .gallery-caption-overlay {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    background: linear-gradient(0deg, rgba(255,255,255,0.96) 90%, rgba(255,255,255,0.7) 100%);
    color: var(--color-primary);
    padding: 1.1em 1.2em 1.2em 1.2em;
    display: flex;
    flex-direction: column;
    gap: 0.7em;
    z-index: 2;
    justify-content: flex-end;
    min-height: 40%;
    max-height: 100%;
    box-sizing: border-box;
  }

  .gallery-title-row {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.7em;
  }

  .gallery-title {
    font-size: 1.15em;
    font-weight: 700;
    margin-bottom: 0.2em;
  }

  .expand-checkbox {
    display: none;
  }

  .expand-btn {
    background: var(--color-primary);
    color: var(--color-accent, #222);
    border: none;
    border-radius: 50%;
    width: 2em;
    height: 2em;
    font-size: 1.3em;
    font-weight: bold;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.2s;
    flex-shrink: 0;
    box-shadow: 0 2px 8px rgba(17, 138, 178, 0.08);
    pointer-events: auto;
    position: relative;
    padding: 0;
    line-height: 1;
  }

  .expand-btn:hover {
    background: var(--color-primary-dark);
  }

  .expand-checkbox:focus + .expand-btn {
    outline: 2px solid var(--color-primary-dark);
    outline-offset: 2px;
  }

  .expand-btn-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    font-size: 1.2em;
    line-height: 1;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
  }

  .expand-btn-icon .minus {
    display: none;
  }

  .expand-checkbox:checked ~ .gallery-title-row .expand-btn .plus {
    display: none;
  }

  .expand-checkbox:checked ~ .gallery-title-row .expand-btn .minus {
    display: inline;
  }

  .gallery-extra-text {
    max-height: 0;
    overflow-y: auto;
    opacity: 0;
    transition: max-height 0.35s cubic-bezier(0.4, 0, 0.2, 1), 
                opacity 0.25s 0.1s;
  }

  .expand-checkbox:checked ~ .gallery-extra-text {
    max-height: 400px;
    opacity: 1;
    transition: max-height 0.45s cubic-bezier(0.4, 0, 0.2, 1), 
                opacity 0.25s;
  }

  .gallery-extra-inner {
    transform: translateY(20px);
    transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1);
    padding-top: 0.5em;
  }

  .expand-checkbox:checked ~ .gallery-extra-text .gallery-extra-inner {
    transform: translateY(0);
  }

  .gallery-subtitle {
    font-size: 1.25em;;
    font-weight: 500;
    color: var(--color-primary);
    margin-bottom: 0.5em;
  }

  .gallery-description {
    font-size: 0.98em;
    color: #444;
    white-space: pre-line;
    line-height: 1.5;
  }
</style>
<style>
@media (max-width: 600px) {
  .gallery-item {
    width: 100vw !important;
    max-width: 100vw !important;
    border-radius: 0 !important;
    margin: 0 !important;
    box-sizing: border-box;
  }
  .gallery-caption-overlay {
    width: 100vw !important;
    max-width: 100vw !important;
    left: 0;
    padding-left: 0.5em;
    padding-right: 0.5em;
    box-sizing: border-box;
  }
  .gallery-image {
    width: 100vw !important;
    max-width: 100vw !important;
    display: block;
  }
}
  /* Popup modal styles */
  #trabajo-modal-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(255,255,255,0.68); /* aún más traslúcido */
    backdrop-filter: blur(8px);
    z-index: 1000;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.25s;
    overflow-y: auto;
  }
  @media (max-width: 600px) {
    #trabajo-modal-bg {
      align-items: center;
    }
  }
  #trabajo-modal-content {
    margin-top: 2.5em;
  }
  #trabajo-modal-bg.active {
    opacity: 1;
    pointer-events: auto;
  }
  #trabajo-modal-content {
    background: rgba(255,255,255,0.93);
    border-radius: 18px;
    box-shadow: 0 8px 32px rgba(0,0,0,0.13);
    padding: 2.2em 1.5em 1.5em 1.5em;
    max-width: 95vw;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    min-width: 320px;
    color: var(--color-accent, #1ec773); /* fuente verde accent */
    transform: scale(0.7);
    opacity: 0;
    transition: transform 0.35s cubic-bezier(0.4,0,0.2,1), opacity 0.25s;
    will-change: transform, opacity;
  }
  #trabajo-modal-bg.active #trabajo-modal-content {
    transform: scale(1);
    opacity: 1;
    transition: transform 0.35s cubic-bezier(0.4,0,0.2,1), opacity 0.25s;
  }
  #trabajo-close-modal {
    position: absolute;
    top: 1em;
    right: 1em;
    background: var(--color-accent, #1ec773);
    color: #fff;
    border: none;
    border-radius: 50%;
    width: 2.2em;
    height: 2.2em;
    font-size: 1.5em;
    font-weight: bold;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(17, 138, 178, 0.10);
    z-index: 10;
    transition: background 0.2s;
  }
  #trabajo-close-modal:hover {
    background: #16a34a;
  }
</style>